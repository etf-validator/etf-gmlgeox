validator.core.validation.message-type.fatal=Fatal
validator.core.validation.message-type.error=Error
validator.core.validation.message-type.warning=Warning
validator.core.validation.message-type.notice=Notice

validator.core.validation.exception.file=File is missing or cannot be read.
validator.core.validation.exception=An exception occured during the validation process.
validator.core.validation.start=Validation started: {0}
validator.core.validation.end=Validation finished: {0}

validator.core.validation.encoding.exception=Encoding error: {0}
validator.core.validation.encoding.utf8.wrong-character=Incorrect UTF-8 character detected. Property: line {0}, column {1}, absolute position {2}, value: {3}, context: "{4}".

# validator.core.validation.geometry.problem-location-text=Problem: ({0} {1})
validator.core.validation.geometry.coordinates-text-simple=Start: ({0} {1}), end: ({2} {3})
validator.core.validation.geometry.coordinates-text=Start: ({0} {1}), end: ({2} {3}), problem: ({4} {5})
validator.core.validation.geometry.unknown-exception=Unknown error. Possibly no coordinates available.
validator.core.validation.geometry.coordinates-position=Element {0} at position {1} within element {2} (gml:id: {3})
validator.core.validation.geometry.valid=The file is geometrically valid
validator.core.validation.geometry.no-gml=No known GML version found (found namespace: {0}).
validator.core.validation.geometry.gmlversion=Detected GML standard version: GML{0}.

validator.core.validation.geometry.event.unexpected=Encountered unexpected geometry validation event ({2}) when processing element {1} (gml:id: {0}). 
validator.core.validation.geometry.problem-location=({0} {1})
validator.core.validation.geometry.problem-location-3d=({0} {1} {2})
validator.core.validation.geometry.curvediscontinuity=Invalid curve. Curve not continuous within element {1}, (gml:id: {0} with coordinates: {2}...). Starting point {3} of segment {4} is not the same as end point {5} of the previous element.
# This message could be relevant for SecondaryGeometryElementHandler: validator.core.validation.geometry.curvepointduplication=Invalid curve. Duplicate coordinates within element {1}, (gml:id: {0}). Problem: ({2} {3})
# validator.core.validation.geometry.curveselfintersection=Invalid curve. Self-intersecting curve within element {1}, (gml:id: {0} with coordinates: {2}...)
validator.core.validation.geometry.unsupported=The geometry contains an unsupported element, within element {1}, (gml:id: {0}). Details: {2}
validator.core.validation.geometry.exteriorRingCW=Invalid polygon. Outer ring of polygon has an orientation incompatible with the specified CRS within element {1}, (gml:id: {0} with coordinates: {2}...)
validator.core.validation.geometry.interiorRingCCW=Invalid polygon. Inner ring of polygon has an orientation incompatible with the specified CRS within element {1}, (gml:id: {0} with coordinates: {2}...)
#validator.core.validation.geometry.interiorringintersectsexterior=Invalid polygon. Inner ring intersects outer ring within element {1}, (gml:id: {0} with coordinates: {2}...)
#validator.core.validation.geometry.interiorringoutsideexterior=Invalid polygon. Inner ring is defined outside of outer ring within element {1}, (gml:id: {0} with coordinates: {2}...)
#validator.core.validation.geometry.interiorringsintersect=Invalid polyoon. Multiple inner rings intersect within element {1}, (gml:id: {0} with coordinates: {2}...)
#validator.core.validation.geometry.interiorringswithin=Invalid polygon. Nested inner rings within element {1}, (gml:id: {0} with coordinates: {2}...)
validator.core.validation.geometry.ringnotclosed=Invalid polygon. Ring is not closed within element {1}, (gml:id: {0} with coordinates: {2}...). Starting point {3} is not the same as end point {4}.

validator.core.validation.geometry.surfacepatchesnotconnected=Invalid surface (gml:id: {0}). The patches of the surface are not connected.
validator.core.validation.geometry.repetitionincurvesegment=Invalid geometry (gml:id: {0}). Repetition of coordinate in curve (segment). Internal representation of the curve segment: {1}. Repeated point: {2}.


validator.core.validation.schematron.unknown-error=Unknown error during rule validation
validator.core.validation.schematron.valid=The file is valid according to rules in {1}

validator.core.validation.schema.location-text=[Line: {0}, column.: {1}]
validator.core.validation.schema.valid=The file is according to schema in {1}